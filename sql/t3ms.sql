--  DROP TABLE  --

DROP TABLE CINEMAMOVIE;
DROP TABLE THEATER;
DROP TABLE TICKETTYPE;
DROP TABLE MEAL_DETAILS;
DROP TABLE MEAL;

DROP TABLE PRIVATE_CHAT;
DROP TABLE SERVICE_CHAT;
DROP TABLE TICKET_DETAIL;
DROP TABLE MOVIE_SESSION;
DROP TABLE TICKET_ORDER;

DROP TABLE MSG;
DROP TABLE TEAM_MSG_REPORT;
DROP TABLE TEAM_MEN_REPORT;
DROP TABLE TEAM_MEN;
DROP TABLE TEAM;

DROP TABLE MEM_PIC;
DROP TABLE PIC_HITS;
DROP TABLE PIC_REPLY;
DROP TABLE REPORT_MSG;
DROP TABLE PIC_REPORT;

DROP TABLE ACTIVITY;
DROP TABLE ANNOUNCEMENT;

DROP TABLE FILMREVIEW;
DROP TABLE FILMREVIEW_MSG;
DROP TABLE REPORT_FILMREVIEW_MSG;

DROP TABLE MOVIE_INTRODUCE;
DROP TABLE MOVIE_TRACE_LIST;
DROP TABLE BOX_OFFICE_CHARTS;

DROP TABLE ACCOUNT_BACKSTAGE;

DROP TABLE ROLE_PERMISSION_BACKSTAGE;
DROP TABLE INVITE_FRIEND;
DROP TABLE FREINDSHIP;

DROP TABLE CINEMA;

DROP TABLE MEMBER;
DROP TABLE MOVIE;

DROP TABLE BACKSTAGE_ROLE;

DROP TABLE NAV_BACKSTAGE;

--  DROP SEQUENCE  --
DROP SEQUENCE CINEMA_SEQ;
DROP SEQUENCE THEATER_SEQ;
DROP SEQUENCE TICKETTYPE_SEQ;
DROP SEQUENCE MEAL_SEQ;

DROP SEQUENCE MOVIE_SESSION_SEQ;
DROP SEQUENCE TICKET_ORDER_SEQ;
DROP SEQUENCE PRIVATE_CHAT_SEQ;
DROP SEQUENCE SERVICE_CHAT_SEQ;
DROP SEQUENCE TICKET_DETAIL_SEQ;

DROP SEQUENCE MSG_SEQ;
DROP SEQUENCE TEAM_SEQ;
DROP SEQUENCE TEAM_MEN_SEQ;
DROP SEQUENCE TEAM_MSG_REPORT_SEQ;
DROP SEQUENCE TEAM_MEN_REPORT_SEQ;

DROP SEQUENCE MEM_PIC_SEQ;
DROP SEQUENCE PIC_HITS_SEQ;
DROP SEQUENCE PIC_REPLY_SEQ;
DROP SEQUENCE REPORT_MSG_SEQ;
DROP SEQUENCE PIC_REPORT_SEQ;

DROP SEQUENCE ACTIVITY_SEQ;
DROP SEQUENCE ANNOUNCEMENT_SEQ;
DROP SEQUENCE FILMREVIEW_SEQ;
DROP SEQUENCE FILMREVIEW_MSG_SEQ;
DROP SEQUENCE REPORT_FILMREVIEW_MSG_SEQ;

DROP SEQUENCE MOVIE_SEQ;
DROP SEQUENCE MEMBER_SEQ;
DROP SEQUENCE MOVIE_INTRODUCE_SEQ;
DROP SEQUENCE MOVIE_TRACE_LIST_SEQ;
DROP SEQUENCE BOX_OFFICE_CHARTS_SEQ;

DROP SEQUENCE ACCOUNT_BACKSTAGE_SEQ;
DROP SEQUENCE NAV_BACKSTAGE_SEQ;
DROP SEQUENCE ROLE_PERMISSION_BACKSTAGE_SEQ;
DROP SEQUENCE INVITE_FRIEND_SEQ;
DROP SEQUENCE FREINDSHIP_FRIEND_SEQ;

--------------------------------------------------------
--  DDL for Sequence CINEMA_SEQ
--------------------------------------------------------
CREATE SEQUENCE CINEMA_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence THEATER_SEQ
--------------------------------------------------------
CREATE SEQUENCE THEATER_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence TICKETTYPE_SEQ
--------------------------------------------------------
CREATE SEQUENCE TICKETTYPE_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence MEAL_SEQ
--------------------------------------------------------
CREATE SEQUENCE MEAL_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence MOVIE_SESSION_SEQ
--------------------------------------------------------
CREATE SEQUENCE MOVIE_SESSION_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence TICKET_ORDER_SEQ
--------------------------------------------------------
CREATE SEQUENCE TICKET_ORDER_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence PRIVATE_CHAT_SEQ
--------------------------------------------------------
CREATE SEQUENCE PRIVATE_CHAT_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence SERVICE_CHAT_SEQ
--------------------------------------------------------
CREATE SEQUENCE SERVICE_CHAT_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence TICKET_DETAIL_SEQ
--------------------------------------------------------
CREATE SEQUENCE TICKET_DETAIL_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence MSG_SEQ
--------------------------------------------------------
CREATE SEQUENCE MSG_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence TEAM_SEQ
--------------------------------------------------------
CREATE SEQUENCE TEAM_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence TEAM_MEN_SEQ
--------------------------------------------------------
CREATE SEQUENCE TEAM_MEN_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence TEAM_MSG_REPORT_SEQ
--------------------------------------------------------
CREATE SEQUENCE TEAM_MSG_REPORT_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  DDL for Sequence TEAM_MEN_REPORT_SEQ
--------------------------------------------------------
CREATE SEQUENCE TEAM_MEN_REPORT_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;


CREATE SEQUENCE MEM_PIC_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOMAXVALUE
  NOCYCLE
  NOCACHE;


CREATE SEQUENCE PIC_HITS_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOMAXVALUE
  NOCYCLE
  NOCACHE;


CREATE SEQUENCE PIC_REPLY_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOMAXVALUE
  NOCYCLE
  NOCACHE;


CREATE SEQUENCE REPORT_MSG_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOMAXVALUE
  NOCYCLE
  NOCACHE;


CREATE SEQUENCE PIC_REPORT_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOMAXVALUE
  NOCYCLE
  NOCACHE;


CREATE SEQUENCE ACTIVITY_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE ANNOUNCEMENT_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE FILMREVIEW_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE FILMREVIEW_MSG_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE REPORT_FILMREVIEW_MSG_SEQ
  MINVALUE 1
  INCREMENT BY 1
  START WITH 1
  NOCACHE
  NOCYCLE;


CREATE SEQUENCE MEMBER_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

CREATE SEQUENCE MOVIE_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

CREATE SEQUENCE BOX_OFFICE_CHARTS_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

CREATE SEQUENCE MOVIE_INTRODUCE_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

CREATE SEQUENCE MOVIE_TRACE_LIST_SEQ
INCREMENT BY 1
START WITH 1
NOMAXVALUE
NOCYCLE
NOCACHE;

CREATE SEQUENCE ACCOUNT_BACKSTAGE_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE NAV_BACKSTAGE_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE ROLE_PERMISSION_BACKSTAGE_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE INVITE_FRIEND_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

CREATE SEQUENCE FREINDSHIP_FRIEND_SEQ
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

--------------------------------------------------------
--  for Table CINEMA
--------------------------------------------------------
CREATE TABLE CINEMA (
  CINEMA_NO      VARCHAR2(10)  NOT NULL,
  CINEMA_NAME    VARCHAR2(100) NOT NULL,
  CINEMA_ENGNAME VARCHAR2(100),
  CINEMA_ADDRESS VARCHAR2(300),
  CINEMA_TEL     VARCHAR2(50),
  INTRODUCTION   VARCHAR2(4000),
  TRAFFIC        VARCHAR2(800),
  PHOTO_TITLE    VARCHAR2(50),
  PHOTO_PATH     VARCHAR2(50),
  ACTIVE         NUMBER(1,0),
  STATE          NUMBER(1,0));

--------------------------------------------------------
--  for Table CINEMAMOVIE
--------------------------------------------------------
CREATE TABLE CINEMAMOVIE (
  CINEMA_NO  VARCHAR2(10) NOT NULL,
  MOVIE_NO   VARCHAR2(10) NOT NULL,
  START_DATE DATE,
  END_DATE   DATE);

--------------------------------------------------------
--  for Table THEATER
--------------------------------------------------------
CREATE TABLE THEATER (
  THEATER_NO   VARCHAR2(10)  NOT NULL,
  CINEMA_NO    VARCHAR2(10)  NOT NULL,
  THEATER_NAME VARCHAR2(100),
  T_ROWS       NUMBER,
  T_COLUMNS    NUMBER,
  SEAT_MODEL   VARCHAR2(4000),
  SEATS        NUMBER,
  EQUIPMENT    VARCHAR2(20));

--------------------------------------------------------
--  for Table TICKETTYPE
--------------------------------------------------------
CREATE TABLE TICKETTYPE (
  TICKETTYPE_NO VARCHAR2(10) NOT NULL,
  THEATER_NO    VARCHAR2(10) NOT NULL,
  IDENTITY      VARCHAR2(100),
  EQUIPMENT     VARCHAR2(20),
  TIME          VARCHAR2(20),
  PRICE         NUMBER);

--------------------------------------------------------
--  for Table MEAL
--------------------------------------------------------
CREATE TABLE MEAL (
  MEAL_NO     VARCHAR2(10) NOT NULL,
  CINEMA_NO   VARCHAR2(10) NOT NULL,
  MEAL_NAME   VARCHAR2(50),
  MEAL_FOOD   VARCHAR2(200),
  MEAL_PRICE  NUMBER,
  MEAL_PHOTO  BLOB,
  EXTENSION   VARCHAR2(20),
  PHOTO_TITLE VARCHAR2(50),
  MEAL_ACTIVE NUMBER(1,0));

--------------------------------------------------------
--  for Table CINEMAMOVIE
--------------------------------------------------------
CREATE TABLE MEAL_DETAILS (
  ORDER_NO  VARCHAR2(10) NOT NULL,
  MEAL_NO   VARCHAR2(10) NOT NULL);



CREATE TABLE MOVIE_SESSION
(
MOVIE_SESSION_NO VARCHAR2(10) NOT NULL,
THEATER_NO VARCHAR2(10) NOT NULL,
MOVIE_NO VARCHAR2(10) NOT NULL,
SEAT_TABLE VARCHAR2(4000));

CREATE TABLE TICKET_ORDER
(
ORDER_NO VARCHAR2(10) NOT NULL,
MEM_NO VARCHAR2(10) NOT NULL,
MEAL_NO VARCHAR2(10) NOT NULL,
UUID VARCHAR2(200),
AMOUNT VARCHAR2(10),
ORDER_STATE NUMBER(1,0),
PAYMENT_STATE NUMBER(1,0),
CREATED_AT DATE NOT NULL,
UPDATED_AT DATE NOT NULL,
EXCHANGE_STATE NUMBER(1,0),
CREDIT_CARD VARCHAR2(20),
DEADLINE VARCHAR2(10),
AUTH_KEY VARCHAR2(5));

CREATE TABLE PRIVATE_CHAT
(
PRIVATE_CHAT_NO VARCHAR2(10) NOT NULL,
TRANS_MEM_NO VARCHAR2(10) NOT NULL,
RECEIVER_MEM_NO VARCHAR2(10) NOT NULL,
CREATED_AT DATE NOT NULL,
CONTENT VARCHAR2(600) NOT NULL);

CREATE TABLE SERVICE_CHAT
(
CHAT_ID VARCHAR2(10) NOT NULL,
BACKSTAGE_NO VARCHAR2(10) NOT NULL,
MEM_NO VARCHAR2(10) NOT NULL,
CREATED_AT DATE NOT NULL,
OWNER NUMBER(1,0),
CONTENT VARCHAR2(600) NOT NULL);

CREATE TABLE TICKET_DETAIL
(
TICKET_DETAIL_NO VARCHAR2(10) NOT NULL,
ORDER_NO VARCHAR2(10) NOT NULL,
SESSION_NO VARCHAR2(10) NOT NULL,
TICKETTYPE_NO VARCHAR2(10) NOT NULL,
SEAT VARCHAR2(10) NOT NULL,
CREATED_AT DATE NOT NULL,
UPDATED_AT DATE NOT NULL);


CREATE TABLE MSG(
MSG_NO VARCHAR2(10) NOT NULL,
MEM_NO VARCHAR2(10) NOT NULL,
TEAM_NO VARCHAR2(10) NOT NULL,
MSG_CON VARCHAR2(600),
PAR_NO NUMBER,
UPDATED_AT DATE NOT NULL,
CREATED_AT DATE NOT NULL);

------------揪團留言--------------

CREATE TABLE TEAM (
TEAM_NO VARCHAR2(10) NOT NULL,
MEM_NO VARCHAR2(10) NOT NULL,
MOVIE_SESSION_NO VARCHAR2(10) NOT NULL,
TEAM_TIME DATE NOT NULL,
TEAM_NAME VARCHAR2(60) NOT NULL,
TEAM_DES VARCHAR2(600),
TEAM_DATE DATE NOT NULL,
TEAM_POS VARCHAR2(60) NOT NULL,
TEAM_REV NUMBER(1,0) NOT NULL,
TEAM_NUM Number NOT NULL,
STATE NUMBER(1,0) NOT NULL);

-------揪團------

CREATE TABLE TEAM_MEN(
TMEM_NO VARCHAR2(10) NOT NULL,
MEM_NO VARCHAR2(10) NOT NULL,
TEAM_NO VARCHAR2(10) NOT NULL,
EVA VARCHAR2(600),
ACCEPTANCE_OPRICE NUMBER(1,0) NOT NULL,
MEN_STATE NUMBER(1,0) NOT NULL,
REV_STATE NUMBER(1,0) NOT NULL);

-------------揪團成員---------------

CREATE TABLE TEAM_MSG_REPORT(
MSGREP_NO VARCHAR2(10) NOT NULL,
MSG_NO VARCHAR2(10) NOT NULL,
MEM_NO VARCHAR2(10) NOT NULL,
RSN VARCHAR2(600) NOT NULL,
STATE NUMBER(1,0) NOT NULL);

-----------檢舉揪團留言----------

CREATE TABLE TEAM_MEN_REPORT(
MENREP_NO NUMBER NOT NULL,
TMEM_NO NUMBER NOT NULL,
MEM_NO NUMBER NOT NULL,
RSN VARCHAR2(600) NOT NULL,
STATE NUMBER(1,0) NOT NULL);

--------檢舉揪團成員------



/* 會員照片牆 MEM_PIC */

CREATE TABLE MEM_PIC (
MEMPIC_NO VARCHAR2(10) NOT NULL ,
MEM_NO VARCHAR2(10) NOT NULL ,
PATH VARCHAR2(50) ,
IMGTEXT VARCHAR2(600) ,
UPDATED_AT DATE NOT NULL ,
CREATED_AT DATE NOT NULL
);

/* 會員照片按讚數 PIC_HITS */

CREATE TABLE PIC_HITS (
HITS_NO VARCHAR2(10) NOT NULL ,
MEMPIC_NO VARCHAR2(10) NOT NULL,
MEM_NO VARCHAR2(10) NOT NULL
);

/* 會員照片留言 PIC_REPLY */

CREATE TABLE PIC_REPLY (
REPLY_NO VARCHAR2(10) ,
MEMPIC_NO VARCHAR2(10) NOT NULL ,
MEM_NO VARCHAR2(10) NOT NULL ,
PARENT_ID VARCHAR2(10) NOT NULL ,
CONTENT VARCHAR2(600) ,
UPDATED_AT DATE NOT NULL ,
CREATED_AT DATE NOT NULL
);

/* 檢舉照片留言 REPORT_MSG */

CREATE TABLE REPORT_MSG (
REPMSG_NO VARCHAR2(10) NOT NULL ,
REPLY_NO VARCHAR2(10) NOT NULL ,
MEM_NO VARCHAR2(10) NOT NULL ,
CONTENT VARCHAR2(600) ,
STATE NUMBER(1,0) NOT NULL
);

/* 檢舉照片 PIC_REPORT */

CREATE TABLE PIC_REPORT (
PICREP_NO VARCHAR2(10) NOT NULL ,
MEMPIC_NO VARCHAR2(10) NOT NULL ,
MEM_NO NUMBER NOT NULL ,
CONTENT VARCHAR2(600) ,
STATE NUMBER(1,0) NOT NULL
);

--

CREATE TABLE ACTIVITY (
  ACTIVITY_NO    VARCHAR2(10)  NOT NULL,
  ACTIVITY_NAME  VARCHAR2(200) NOT NULL,
  ACTIVITY_DESC  VARCHAR2(500) NOT NULL,
  BACKSTAGE_NO   VARCHAR2(10)  NOT NULL,
  CREATED_AT     Date          NOT NULL,
  UPDATED_AT     Date          NOT NULL,
  ACTIVE         NUMBER(1,0)   ,
  IMG_PATH       Varchar2(50)  NOT NULL,
  ACTIVITY_URL   Varchar2(200) NOT NULL);


CREATE TABLE ANNOUNCEMENT (
  ANC_NO         VARCHAR2(10)  NOT NULL,
  ANC_CON        VARCHAR2(500) NOT NULL,
  BACKSTAGE_NO   VARCHAR2(10)  NOT NULL,
  CREATED_AT     Date          NOT NULL,
  UPDATED_AT     Date          NOT NULL,
  ACTIVE         NUMBER(1,0)   );


CREATE TABLE BACKSTAGE_ROLE (
  BR_NO          VARCHAR2(10)  NOT NULL,
  BR_NAME        VARCHAR2(100) ) ;


CREATE TABLE FILMREVIEW (
  MFR_NO         VARCHAR2(10)  NOT NULL,
  MOVIE_NO       VARCHAR2(10) NOT NULL,
  CREATED_AT     Date          NOT NULL,
  UPDATED_AT     Date          NOT NULL,
  CONTENT        CLOB          NOT NULL,
  EVALUATION     NUMBER(2,1)   ,
  TITLE          VARCHAR2(300) NOT NULL,
  SOURCE         VARCHAR2(60)  ,
  URL            VARCHAR2(200) ,
  MEM_NO         VARCHAR2(10)  ,
  AUTHOR         VARCHAR2(60)  ,
  ACTIVE         NUMBER(1,0)   );


CREATE TABLE FILMREVIEW_MSG (
  FRM_NO         VARCHAR2(10)  NOT NULL,
  MFR_NO         VARCHAR2(10)  NOT NULL,
  MEM_NO         VARCHAR2(10)  NOT NULL,
  CREATED_AT     Date          NOT NULL,
  UPDATED_AT     Date          NOT NULL,
  CONTENT        Varchar2(600) NOT NULL,
  PARENT_ID      NUMBER(10,0)  );


CREATE TABLE REPORT_FILMREVIEW_MSG (
  RFM_NO         VARCHAR2(10)  NOT NULL,
  MESSAGE_NO     VARCHAR2(10)  NOT NULL,
  MEM_NO         VARCHAR2(10)  NOT NULL,
  STATE          NUMBER(1,0)   ,
  CONTENT        Varchar2(600) NOT NULL );


-------------會員---------------
CREATE TABLE MEMBER (
  MEM_NO      VARCHAR2(10)  NOT NULL,
  MEM_PW      VARCHAR2(200)  NOT NULL,
  FNAME       VARCHAR2(20)  NOT NULL,
  LNAME       VARCHAR2(20)  NOT NULL,
  IDNUM       VARCHAR2(10)  NOT NULL UNIQUE,
  GENDER      VARCHAR2(1),
  LOCNO       NUMBER,
  ADDR        VARCHAR2(100),
  PHONE       VARCHAR2(20),
  EMAIL       VARCHAR2(20)  NOT NULL,
  STATUS      NUMBER(1,0),
  TYPE        NUMBER(1,0),
  MEMIMG      BLOB,
  EXTNAME     VARCHAR2(20),
  BIRTHDAY    DATE,
  VIOLATION   NUMBER,
  INTRODUCTION VARCHAR2(600)
  );


-------------電影---------------
CREATE TABLE MOVIE(
    MOVIE_NO      VARCHAR2(10)   NOT NULL,
    MOVIE_TYPE    VARCHAR2(30),
    MOVIE_NAME    VARCHAR2(60),
    ENG_NAME      VARCHAR2(60),
    POSTER_PATH   VARCHAR2(50),
    RELASED       DATE,
    DISTRIBUTED   VARCHAR2(30),
    LENGTH        NUMBER,
    LANGUAGE      VARCHAR2(30),
    MADEIN        VARCHAR2(30),
    IMDB          NUMBER,
    TOMATO        VARCHAR2(20),
    RATING        VARCHAR2(20),
    TRAILER_URL   VARCHAR2(50),
    BRIEF_INTRO   VARCHAR2(4000),
    ACTIVE        NUMBER(1,0),
    DIRECTOR      VARCHAR2(20),
    STARRING      VARCHAR2(300)
);


-------------票房排行榜---------------
CREATE TABLE  BOX_OFFICE_CHARTS(
    RANKING_NO     VARCHAR2(10)     NOT NULL,
    MOVIE_NO       VARCHAR2(10)     NOT Null,
    STATISTICS     DATE,
    RANK           NUMBER,
    LOC            NUMBER
    );


-------------電影介紹(推薦文章)---------------
CREATE TABLE MOVIE_INTRODUCE(
    INTROD_NO   VARCHAR2(10) NOT NULL,
    MOVIE_NO    VARCHAR2(10),
    SOURCE      VARCHAR2(60),
    URL         VARCHAR2(200),
    AUTHOR      VARCHAR2(30),
    TITLE       VARCHAR2(300),
    CONTENT     CLOB,
    CREATED_AT  DATE,
    UPDATED_AT  DATE,
    ACTIVE      NUMBER(1,0)
);


-------------電影追蹤清單---------------
CREATE TABLE MOVIE_TRACE_LIST(
	MEM_NO     VARCHAR2(10) NOT NULL,
	MOVIE_NO   VARCHAR2(10) NOT NULL
);


CREATE TABLE ACCOUNT_BACKSTAGE
(
  BS_ACC_NO VARCHAR2(10) NOT NULL,
  ROLE_NO VARCHAR2(10) NOT NULL,
  BS_ACC_NAME VARCHAR2(100) NOT NULL,
  CINEMA_NO VARCHAR2(10),
  BS_ACC_PSW VARCHAR2(200) NOT NULL,
  EMAIL VARCHAR2(300) NOT NULL,
  TEL VARCHAR2(200) NOT NULL,
  LAST_ONLINE_TIME DATE NOT NULL,
  STATE NUMBER(1,0) NOT NULL
);


CREATE TABLE NAV_BACKSTAGE
(
  LISTITEM_NO VARCHAR2(10) NOT NULL,
  LISTITEM_NAME VARCHAR2(100) NOT NULL,
  URL VARCHAR2(400) NOT NULL,
  PARENT_ID VARCHAR2(10),
  ITEM_ORDER NUMBER(10) NOT NULL
);

CREATE TABLE ROLE_PERMISSION_BACKSTAGE
(
  PERMISSION_NO VARCHAR2(10) NOT NULL,
  ROLE_NO VARCHAR2(10) NOT NULL
);

CREATE TABLE INVITE_FRIEND
(
  INVITE_NO VARCHAR2(10) NOT NULL,
  FRIEND_NO VARCHAR2(10) NOT NULL,
  TEAM_NO VARCHAR2(10) NOT NULL
);

CREATE TABLE FREINDSHIP
(
  FRIENDSHIP_NO VARCHAR2(10) PRIMARY KEY,
  MEM_NO VARCHAR2(10) NOT NULL,
  FRIEND_NO VARCHAR2(10) NOT NULL,
  STATE NUMBER(1,0) NOT NULL
);

ALTER TABLE CINEMA ADD CONSTRAINT "CINEMA_NO_PK" PRIMARY KEY ("CINEMA_NO");

ALTER TABLE MOVIE ADD CONSTRAINT "MOVIE_NO_PK" PRIMARY KEY ("MOVIE_NO");

ALTER TABLE CINEMAMOVIE ADD CONSTRAINT "CINEMAMOVIE_PK" PRIMARY KEY ("CINEMA_NO", "MOVIE_NO");

ALTER TABLE CINEMAMOVIE ADD CONSTRAINT "CINEMA_NO_FK" FOREIGN KEY ("CINEMA_NO") REFERENCES CINEMA ("CINEMA_NO")
  ADD CONSTRAINT "MOVIE_NO_FK" FOREIGN KEY ("MOVIE_NO") REFERENCES MOVIE ("MOVIE_NO");

/*
Insert into CINEMA (CINEMA_NO, CINEMA_NAME) values ('C001', '威秀');
Insert into MOVIE (MOVIE_NO) values ('M001');
Insert into CINEMAMOVIE (CINEMA_NO, MOVIE_NO) values ('C001', 'M001');
*/

ALTER TABLE MEMBER ADD CONSTRAINT "MEM_NO_PK" PRIMARY KEY ("MEM_NO");

ALTER TABLE BACKSTAGE_ROLE ADD CONSTRAINT "BR_NO_PK" PRIMARY KEY ("BR_NO");

ALTER TABLE NAV_BACKSTAGE ADD CONSTRAINT "LISTITEM_NO_PK" PRIMARY KEY ("LISTITEM_NO");
ALTER TABLE NAV_BACKSTAGE ADD CONSTRAINT "PARENT_ID_FK" FOREIGN KEY ("PARENT_ID") REFERENCES NAV_BACKSTAGE ("LISTITEM_NO");


commit;